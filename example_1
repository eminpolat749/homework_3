package csd;

class App {
	public static void main(String [] args)
	{
		SatisfyConditionsApp.run();
	}
}

class SatisfyConditionsApp {
	public static boolean isCondition1Satisfied(int a, int b, int c)
	{
		return 100 * c + 10 * b + a > 100 * a + 10 * b + c;
	}
	
	public static boolean isCondition2Satisfied(int a, int b, int c)
	{
		return Util.isPrime(100 * a + 10 * b + c);
	}
	
	public static boolean isCondition3Satisfied(int a, int b, int c)
	{
		return Util.isPrime(100 * c + 10 * b + a);
	}
	
	public static boolean isCondition4Satisfied(int a, int b)
	{
		return Util.isPrime(10 * a + b);
	}
	
	public static boolean isCondition5Satisfied(int b, int c)
	{
		return Util.isPrime(10 * b + c);
	}
	
	public static boolean isCondition6Satisfied(int c, int b)
	{
		return Util.isPrime(10 * c + b);
	}
	
	public static boolean isCondition7Satisfied(int b, int a)
	{
		return Util.isPrime(10 * b + a);
	}
	
	public static boolean isAllSatisfied(int val)
	{
		int a = val / 100;
		int b = val / 10 % 10;
		int c = val % 10;
		
		return isCondition1Satisfied(a, b, c) && isCondition2Satisfied(a, b, c) && isCondition3Satisfied(a, b, c)
				&& isCondition4Satisfied(a, b) && isCondition5Satisfied(b, c) && isCondition6Satisfied(c, b)
				&& isCondition7Satisfied(b, a);
	}
	
	public static void run()
	{
		for (int i = 100; i <= 999; ++i)
			if (isAllSatisfied(i))
				System.out.println(i);
	}
}

class Util {
	public static boolean isPrime(long val)
	{
		if (val <= 1)
			return false;
		
		if (val % 2 == 0)
			return val == 2;
		
		if (val % 3 == 0)
			return val == 3;
		
		if (val % 5 == 0)
			return val == 5;
		
		for (long i = 7; i * i <= val; i += 2)
			if (val % i == 0)
				return false;
		
		return true;			
	}
}
